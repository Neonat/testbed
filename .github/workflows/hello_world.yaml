### JSON output:
# { name: hello_world,
#   on: [push],
#   jobs: {}
# }

# name
name: hello_world

# trigger
on: ## on is an array
- push

# one or more jobs
jobs: ## jobs are run sequentially
  greetings:
    runs-on: ubuntu-latest
    steps: 
    - id: s00 #id each step
      #running some shell bash command
      run: echo "Current time in GitHub is $(date), ${GITHUB_OUTPUT}" #works like Python f-strings

    - id: s01
    # create a value and pass to the next step
      run: echo "CURR_DATE=$(date)" >> $GITHUB_OUTPUT
      ## >> means append to the file, > means replace everything

    - id: s02 #use prebuilt actions
      uses: mscoutermarsh/cowsays-action@master
      with:
      # step is called context so you know which one to reference
        text: 'moo moo moo ${{ steps.s01.outputs.CURR_DATE }}, ${{ github.ref }}, ${{ github.repository }}'
        color: 'green'

    # - id: s01
    #   run: ls -al
    # - id: s02 <-- ERROR here!!
    #   run: cat hello.txt

# # GOT ERROR, comment out first
#   goodbye: # group jobs logically

#     runs-on: ubuntu-latest
#     steps:
#     - id: s02
#       name: Compute elapsed time
#       run: |
#         NOW=$(date +%s)
#         START=${{ steps.s01.outputs.CURR_DATE }}
#         DIFF=$(( NOW - START ))
#         echo "DIFF=$DIFF" >> $GITHUB_OUTPUT

#     - name: Cow says the saved time
#       uses: mscoutermarsh/cowsays-action@master
#       with:
#         text: "moo moo moo Saved time: ${{ steps.s01.outputs.CURR_DATE }}"
#         color: "green"

#     - name: Cow says the elapsed time
#       uses: mscoutermarsh/cowsays-action@master
#       with:
#         text: "Elapsed time is ${{ steps.s02.outputs.DIFF }} seconds"
#         color: "yellow"